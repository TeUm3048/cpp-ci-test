name: build_test_lint

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and test
    steps:
      - name: Cache LCOV
        id: cache-lcov
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/lcov
            /usr/local/bin/genhtml
            /usr/local/bin/geninfo
            /usr/local/bin/genpng
            /usr/local/bin/gendesc
            /usr/local/bin/perl2lcov
            /usr/local/bin/py2lcov
            /usr/local/bin/xml2lcov
            /usr/local/bin/xml2lcovutil.py
            /usr/local/share/lcov/support-scripts
            /usr/local/etc/lcovrc
            /usr/local/share/perl
            /usr/local/lib/lcov
          key: lcov-${{ runner.os }}-v2.2
          restore-keys: |
            lcov-${{ runner.os }}-

      - name: Setup LCOV
        if: steps.cache-lcov.outputs.cache-hit != 'true'
        uses: hrishikesh-kadam/setup-lcov@v1
        with:
          ref: v2.2
      - name: List cached files
        run: |
          ls -la /usr/local/bin
          ls -la /usr/local/lib
          perl -V
        
      - name: Check out source repository
        uses: actions/checkout@v4
      - name: Configure CMake and build
        uses: threeal/cmake-action@v2
        with:
          source-dir: .
          build-dir: build
          generator: Unix Makefiles
          c-compiler: gcc
          cxx-compiler: g++
          options: |
            BUILD_TESTS=ON

      - name: Run tests with coverage
        run: |
          cd build
          cmake --build . --target coverage

      - name: Check coverage report exists
        run: |
          if [ ! -f build/coverage_filtered.info ]; then
            echo "Coverage report not found!";
            exit 1;
          fi

      - name: Upload coverage report
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: build/coverage_filtered.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          artifact-name: "code-coverage-report"
          minimum-coverage: 10
          update-comment: true
      - name: Upload coverage to Coveralls
        if: always()
        uses: coverallsapp/github-action@v2
        with:
          file: build/coverage_filtered.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
